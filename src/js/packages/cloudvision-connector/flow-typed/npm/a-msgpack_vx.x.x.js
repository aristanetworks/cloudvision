// flow-typed signature: 31e9b891aedf865a512f0742251d0407
// flow-typed version: <<STUB>>/a-msgpack_v0.0.1/flow_v0.84.0

/**
 * This is an autogenerated libdef stub for:
 *
 *   'a-msgpack'
 *
 * Fill this stub out by replacing all the `any` types.
 *
 * Once filled out, we encourage you to share your work with the
 * community by sending a pull request to:
 * https://github.com/flowtype/flow-typed
 */

declare module 'a-msgpack' {
  declare export var Headers;

  declare export var Encoder;

  declare export var Decoder;

  declare export var BufferUtils;

  declare export var TokenCreators;

  declare export class Paper {
    buffer: Uint8Array;
    codec: Codec;
    offset: number;
    send: (buffer: Uint8Array) => void;
  }

  declare export class Codec {
    writeType: {
      array: (encoder: Paper, value: Array<mixed>) => void,
      bigint: (encoder: Paper, value: number) => void,
      bin: (encoder: Paper, value: Uint8Array) => void,
      boolean: (encoder: Paper, value: boolean) => void,
      function: (encoder: Paper) => void,
      int: (encoder: Paper, value: number) => void,
      map: (encoder: Paper, value: mixed) => void,
      null: (encoder: Paper) => void,
      number: (encoder: Paper, value: number) => void,
      object: (writeType: {}, encoder: Paper, value: {}) => mixed,
      string: (encoder: Paper, value: string) => void,
      symbol: (encoder: Paper) => void,
      undefined: (encoder: Paper) => void,
    };
    register: (
      etype: number,
      Class: Function,
      packer: (data: any) => Uint8Array,
      unpacker: (buffer: Uint8Array) => any,
    ) => void;
    replaceWriteType: (
      type: string,
      func: Function,
      includeEncode?: boolean,
    ) => void;
    replaceReadToken: (
      token: number,
      creator: Function,
      len: number,
      func: Function,
      includeDecode?: boolean,
    ) => void;
    _packerFor: (value: mixed) => Function;
  }

  declare export function decodeFn(buffer: Uint8Array, codec?: Codec, forceJSBI?: boolean): mixed

  declare export function encodeFn(data: mixed, codec?: Codec): Uint8Array

  declare export default {
    decode: typeof decodeFn,
    encode: typeof encodeFn,
    Codec: Class<Codec>,
  };
}

/**
 * We include stubs for each file inside this npm package in case you need to
 * require those files directly. Feel free to delete any files that aren't
 * needed.
 */
declare module 'a-msgpack/benchmark/index' {
  declare module.exports: any;
}

declare module 'a-msgpack/jest.config' {
  declare module.exports: any;
}

declare module 'a-msgpack/rollup.config' {
  declare module.exports: any;
}

declare module 'a-msgpack/src/buffer-util' {
  declare module.exports: any;
}

declare module 'a-msgpack/src/codec' {
  declare module.exports: any;
}

declare module 'a-msgpack/src/decode' {
  declare module.exports: any;
}

declare module 'a-msgpack/src/encode' {
  declare module.exports: any;
}

declare module 'a-msgpack/src/index' {
  declare module.exports: any;
}

declare module 'a-msgpack/src/paper' {
  declare module.exports: any;
}

declare module 'a-msgpack/src/read-format' {
  declare module.exports: any;
}

declare module 'a-msgpack/src/read-token' {
  declare module.exports: any;
}

declare module 'a-msgpack/src/token-creators' {
  declare module.exports: any;
}

declare module 'a-msgpack/src/types' {
  declare module.exports: any;
}

declare module 'a-msgpack/src/write-format' {
  declare module.exports: any;
}

declare module 'a-msgpack/src/write-header' {
  declare module.exports: any;
}

declare module 'a-msgpack/src/write-type' {
  declare module.exports: any;
}

declare module 'a-msgpack/test/10.encode.spec' {
  declare module.exports: any;
}

declare module 'a-msgpack/test/11.decode.spec' {
  declare module.exports: any;
}

declare module 'a-msgpack/test/12.codec.spec' {
  declare module.exports: any;
}

declare module 'a-msgpack/test/encoder-setup' {
  declare module.exports: any;
}

// Filename aliases
declare module 'a-msgpack/benchmark/index.js' {
  declare module.exports: $Exports<'a-msgpack/benchmark/index'>;
}
declare module 'a-msgpack/jest.config.js' {
  declare module.exports: $Exports<'a-msgpack/jest.config'>;
}
declare module 'a-msgpack/rollup.config.js' {
  declare module.exports: $Exports<'a-msgpack/rollup.config'>;
}
declare module 'a-msgpack/src/buffer-util.js' {
  declare module.exports: $Exports<'a-msgpack/src/buffer-util'>;
}
declare module 'a-msgpack/src/codec.js' {
  declare module.exports: $Exports<'a-msgpack/src/codec'>;
}
declare module 'a-msgpack/src/decode.js' {
  declare module.exports: $Exports<'a-msgpack/src/decode'>;
}
declare module 'a-msgpack/src/encode.js' {
  declare module.exports: $Exports<'a-msgpack/src/encode'>;
}
declare module 'a-msgpack/src/index.js' {
  declare module.exports: $Exports<'a-msgpack/src/index'>;
}
declare module 'a-msgpack/src/paper.js' {
  declare module.exports: $Exports<'a-msgpack/src/paper'>;
}
declare module 'a-msgpack/src/read-format.js' {
  declare module.exports: $Exports<'a-msgpack/src/read-format'>;
}
declare module 'a-msgpack/src/read-token.js' {
  declare module.exports: $Exports<'a-msgpack/src/read-token'>;
}
declare module 'a-msgpack/src/token-creators.js' {
  declare module.exports: $Exports<'a-msgpack/src/token-creators'>;
}
declare module 'a-msgpack/src/types.js' {
  declare module.exports: $Exports<'a-msgpack/src/types'>;
}
declare module 'a-msgpack/src/write-format.js' {
  declare module.exports: $Exports<'a-msgpack/src/write-format'>;
}
declare module 'a-msgpack/src/write-header.js' {
  declare module.exports: $Exports<'a-msgpack/src/write-header'>;
}
declare module 'a-msgpack/src/write-type.js' {
  declare module.exports: $Exports<'a-msgpack/src/write-type'>;
}
declare module 'a-msgpack/test/10.encode.spec.js' {
  declare module.exports: $Exports<'a-msgpack/test/10.encode.spec'>;
}
declare module 'a-msgpack/test/11.decode.spec.js' {
  declare module.exports: $Exports<'a-msgpack/test/11.decode.spec'>;
}
declare module 'a-msgpack/test/12.codec.spec.js' {
  declare module.exports: $Exports<'a-msgpack/test/12.codec.spec'>;
}
declare module 'a-msgpack/test/encoder-setup.js' {
  declare module.exports: $Exports<'a-msgpack/test/encoder-setup'>;
}
